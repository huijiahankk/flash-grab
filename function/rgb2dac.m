function DAC = rgb2dac(RGB, invGammaTable)%%%%%%%%%%%%%%%%%  rgb2dac  %%%%%%%%%%%%%%%%%%% DAC = rgb2dac(RGB, invGammaTable)%% RGB is the linear intensity of each gun, in the form of [r g b]. r, g, or b%    can be a matrix, a vector, or a number. RGB should be in the range [0 1]. %% DAC contains the frame buffer values of the 3 color planes, in the form%    of [DAC_r DAC_g DAC_b]. To separate the 3 planes, use GetPlanes.%    The DAC values returned are in the range [0, 1].%% invGammaTable -- the look up table to go from linear RGB to DAC%    If it has one column, all RGB values are changed according to this%    If it is a scalar number, raise the RGB values to 1/invGammaTable.%    If GammaTable is not given, use a default scalar of 1/2.2.%% Xuemei Zhang% Last Modified 4/16/97if (nargin==1)  invGammaTable = 2.2;end[m,n] = size(RGB);if (prod(size(invGammaTable))==1)  if (nargin==1)    disp(['Raising RGB values to a power of 1/' num2str(invGammaTable)]);  end  DAC = RGB.^(1/invGammaTable);else  RGB = round(RGB * (size(invGammaTable,1)-1)) + 1; %bm: RGB is a 253x3 matrix whose span (>0 AND <1) is determined by the contrast. e.g. it may be [0.25 0.75] when the contrast is 0.5.%bm: And the above produce a 253x3 matrix whose span is 1024xcontrast. It%stands for the indices to extract the corresponding rgb values from%invGammaTable. And because the 253 colors are for specific contrast, color%254-256 is [1 1 1], so fixation is always white.  if (size(invGammaTable,2)==1)    DAC = invGammaTable(RGB(:));  else    RGB = reshape(RGB, m*n/3, 3);    DAC = [invGammaTable(RGB(:,1),1) invGammaTable(RGB(:,2),2) ...	   invGammaTable(RGB(:,3),3)];%bm: so DAC is the new Gamma Table matrix  end  DAC = reshape(DAC, m, n);endDAC = DAC/max(invGammaTable(:));if(sum(sum(isnan(DAC))) > 0)	disp('Warning:  NaN in DAC!  Requested intensity probably lower than display can produce.');end% If invGammaTable it has 3 columns, treat input image as 3%         planes and transform to DAC with the corresponding column.%elseif (size(invGammaTable,2)==3 & size(invGammaTable,1)==1)%  RGB = reshape(RGB, m*n/3, 3);%  invGammaTable = 1./invGammaTable;%  disp(['Raising R values to a power of 1/' num2str(invGammaTable(1))]);%  disp(['Raising G values to a power of 1/' num2str(invGammaTable(2))]);%  disp(['Raising B values to a power of 1/' num2str(invGammaTable(3))]);%  DAC = [RGB(:,1).^invGammaTable(1) ...%	 RGB(:,2).^invGammaTable(2) ...%	 RGB(:,3).^invGammaTable(3)];%  DAC = reshape(DAC, m, n); 